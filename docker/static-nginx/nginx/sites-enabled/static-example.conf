proxy_cache_path /store/cache/example.com levels=1:2 keys_zone=example.com:100m  inactive=10d  max_size=100g;
proxy_cache_key "$scheme://$host$request_uri";
upstream example-upstream {
        server 127.0.0.1:8080 weight=1 max_fails=3 fail_timeout=30s;
}
server {
        server_tokens off;
        server_name static.example.com;
        listen 80 default;
        #listen 443 ssl default;

        access_log /var/log/nginx/fontend_static.example.com_access.log;
        error_log  /var/log/nginx/fontend_static.example.com_error.log;

        #ssl_certificate         /ssl/example.com.crt;
        #ssl_certificate_key     /ssl/example.com.key;
        if ($http_user_agent ~* (baidu)) {
        return 403;
        }
        location / {
                expires 30d;
                proxy_pass http://example-upstream;
                proxy_cache_use_stale error timeout http_500 http_502 http_503 http_504;
                proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
                proxy_cache example.com;
                proxy_cache_valid  200 206 2592000s;
                proxy_cache_valid  301 10m;
                proxy_cache_valid  400 403 404 500 502 503 1m;
                #proxy_cache_key http.example.com$uri$is_args$args;
                proxy_cache_min_uses 1;
                proxy_temp_path /store/tmp;
                proxy_ignore_headers Cache-Control Set-Cookie;
                proxy_connect_timeout      300;
                proxy_send_timeout         300;
                proxy_read_timeout         300;
                proxy_buffer_size          4k;
                proxy_buffers              4 32k;
                proxy_busy_buffers_size    64k;
                proxy_temp_file_write_size 64k;
                proxy_max_temp_file_size 0;
                proxy_set_header Proxy "";
                proxy_redirect     off;
                proxy_cache_revalidate on;
                proxy_cache_lock on;
                proxy_cache_lock_timeout 5s;
                proxy_cache_lock_age 200s;
                proxy_cache_use_stale updating;
                add_header X-Cache-Status "$upstream_cache_status";
                add_header X-Thank-You "for bothering to look at our HTTP headers";
                add_header X-Hello-Human "Email: nguyenvodung at dot com";
                add_header X-Origin-Location "IDC HANOI, VN";
                add_header Access-Control-Allow-Headers '*';
                add_header Access-Control-Expose-Headers 'Server,range,Content-Length,Content-Range';
                add_header Access-Control-Allow-Methods 'GET, HEAD, OPTIONS';
                add_header Access-Control-Allow-Origin '*';
        }

}
server
{
        server_name _;
        listen 8080;
        client_max_body_size 500M;
        access_log /var/log/nginx/backend_static.example.com_access.log;
        error_log  /var/log/nginx/backend_static.example.com_error.log;
        include       mime.types;
        root /store/files;
        index index.php;
        location / {
                autoindex off;

        }
        if ($request_method !~ ^(GET|HEAD|POST)$ ) {
                return 444;
        }

        location = /favicon.ico {
                log_not_found off;
                access_log off;
        }
        location = /robots.txt {
                allow all;
                log_not_found off;
                access_log off;
        }
        location ~ /\. {
                deny all;
        }
        location ~* ^/(modules|application|system) {
                return 403;
        }
        location ~ /\.ht {
                deny  all;
        }
}
